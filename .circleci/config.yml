version: 2.1
orbs:
  elixir: membraneframework/elixir@1

commands:
  mix_release_server:
    parameters:
      platform:
        type: enum
        enum: [macosx-arm, linux-x86]
      version:
        description: version of boombox
        type: string
      cache-version:
        description: "Cache version number, can be used to force cache recreation"
        type: integer
        default: 1


    steps:
      - checkout
      - when:
          condition:
            equal: [<< parameters.platform >>, macosx-arm]
          steps:
            - run:
                command: |
                  brew install asdf openssl
                  asdf plugin add elixir || true
                  asdf plugin add erlang || true
                  asdf install
                  echo 'export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"' >> $BASH_ENV
            - run:
                command: |
                  mix local.hex --force
                  mix local.rebar --force
      - elixir/get_mix_deps:
          cache-version: << parameters.cache-version >>
      - elixir/use_build_cache:
          cache-version: << parameters.cache-version >>
      - run:
          mix compile
      - run:
          mix release server
      - run: |
          mkdir -p artifacts
          tar -czvf artifacts/boombox-server-<< parameters.version >>-<< parameters.platform >>.tar.gz -C _build/prod/rel/server .
      - run:
          du -h artifacts
      - persist_to_workspace:
          root: ~/project/
          paths:
            - artifacts



jobs:
  test_exclude_browser:
    docker:
      - image: membraneframeworklabs/docker_membrane
    environment:
      MIX_ENV: test

    working_directory: ~/app
    steps:
      - attach_workspace:
          at: .
      - checkout
      - run: mix deps.get
      - run: mix compile
      - run: mix test --exclude browser

  mix_release_server_linux_x86:
    parameters:
      version:
        description: version of boombox
        type: string

    docker:
      - image: membraneframeworklabs/docker_membrane

    environment:
      MIX_ENV: prod

    steps:
      - mix_release_server:
          platform: linux-x86
          version: << parameters.version >>

  mix_release_server_macosx_arm:
    parameters:
      version:
        description: version of boombox
        type: string

    macos:
      xcode: 16.4.0
    resource_class: macos.m1.medium.gen1

    environment:
      MIX_ENV: prod

    steps:
      - mix_release_server:
          platform: macosx-arm
          version: << parameters.version >>

  publish_releases:
    parameters:
      version:
        description: version of boombox
        type: string

    docker:
      - image: ubuntu

    steps:
      - attach_workspace:
          at: ~/
      - run: |
          apt update
          apt install -y wget
          wget https://github.com/tcnksm/ghr/releases/download/v0.16.0/ghr_v0.16.0_linux_amd64.tar.gz
          tar -xf ghr_v0.16.0_linux_amd64.tar.gz
      - run: |
          ./ghr_v0.16.0_linux_amd64/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete << parameters.version >> ~/artifacts/



workflows:
  version: 2
  build:
    jobs:
      - elixir/build_test:
          filters: &filters
            branches:
              ignore: /.*/
            tags:
              only: /vv.*/
      - elixir/lint:
          filters:
            <<: *filters
      - test_exclude_browser:
          filters:
            <<: *filters
      - elixir/hex_publish:
          requires:
            - elixir/build_test
            - test_exclude_browser
            - elixir/lint
          context:
            - Deployment
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /vv.*/
      - mix_release_server_macosx_arm:
          #requires:
            #- elixir/build_test
            #- test_exclude_browser
            #- elixir/lint
          context:
            - Deployment
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
          version: << pipeline.git.tag >>
      - mix_release_server_linux_x86:
          #requires:
            #- elixir/build_test
            #- test_exclude_browser
            #- elixir/lint
          context:
            - Deployment
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
          version: << pipeline.git.tag >>
      - publish_releases:
          requires:
            - mix_release_server_macosx_arm
            - mix_release_server_linux_x86
          context:
            - Deployment
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
          version: << pipeline.git.tag >>
